"use strict";
/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.10.8.0 (NJsonSchema v10.3.11.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Values = exports.Keys = exports.IIdentity = exports.ClaimsIdentity = exports.Claim = exports.ClaimsPrincipal = exports.ProblemDetailsFactory = exports.IObjectModelValidator = exports.IUrlHelper = exports.IModelBinderFactory = exports.IModelMetadataProvider = exports.IValueProviderFactory = exports.IFilterMetadata = exports.FilterDescriptor = exports.EmptyBodyBehavior = exports.FuncOfActionContextAndBoolean = exports.FuncOfModelMetadataAndBoolean = exports.IPropertyFilterProvider = exports.BindingSource = exports.BindingInfo = exports.ParameterDescriptor = exports.IActionConstraintMetadata = exports.AttributeRouteInfo = exports.ControllerActionDescriptor = exports.ActionDescriptor = exports.ControllerContext = exports.ActionContext = exports.ModelValidationState = exports.Exception = exports.ModelError = exports.ModelStateEntry = exports.ModelStateDictionary = exports.IRouter = exports.RouteData = exports.PipeWriter = exports.HttpResponse = exports.IEqualityComparerOfString = exports.ActionOfObjectAndObject = exports.FuncOfObjectAndObject = exports.MulticastDelegate = exports.Delegate = exports.ModuleHandle = exports.SecurityRuleSet = exports.CustomAttributeNamedArgument = exports.CustomAttributeTypedArgument = exports.CallingConventions = exports.MethodImplAttributes = exports.ConstructorInfo = exports.CustomAttributeData = exports.Assembly = exports.Module = exports.ParameterAttributes = exports.ParameterInfo = exports.MethodInfo = exports.MethodBase = exports.MemberTypes = exports.PropertyInfo = exports.MemberInfo = exports.PropertyHelper = exports.PropertyStorage = exports.KeyValuePairOfStringAndObject = exports.RouteValueDictionary = exports.PipeReader = exports.HttpRequest = exports.HttpContext = exports.ClientesController = exports.ControllerBase = exports.ClienteDto = void 0;
var ClienteDto = /** @class */ (function () {
    function ClienteDto(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ClienteDto.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"];
            this.nome = _data["nome"];
            this.cPF = _data["CPF"];
            this.telefone = _data["telefone"];
        }
    };
    ClienteDto.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ClienteDto();
        result.init(data);
        return result;
    };
    ClienteDto.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["nome"] = this.nome;
        data["CPF"] = this.cPF;
        data["telefone"] = this.telefone;
        return data;
    };
    return ClienteDto;
}());
exports.ClienteDto = ClienteDto;
var ControllerBase = /** @class */ (function () {
    function ControllerBase(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ControllerBase.prototype.init = function (_data) {
        if (_data) {
            this.httpContext = _data["HttpContext"] ? HttpContext.fromJS(_data["HttpContext"]) : undefined;
            this.request = _data["Request"] ? HttpRequest.fromJS(_data["Request"]) : undefined;
            this.response = _data["Response"] ? HttpResponse.fromJS(_data["Response"]) : undefined;
            this.routeData = _data["RouteData"] ? RouteData.fromJS(_data["RouteData"]) : undefined;
            this.modelState = _data["ModelState"] ? ModelStateDictionary.fromJS(_data["ModelState"]) : undefined;
            this.controllerContext = _data["ControllerContext"] ? ControllerContext.fromJS(_data["ControllerContext"]) : undefined;
            this.metadataProvider = _data["MetadataProvider"] ? IModelMetadataProvider.fromJS(_data["MetadataProvider"]) : undefined;
            this.modelBinderFactory = _data["ModelBinderFactory"] ? IModelBinderFactory.fromJS(_data["ModelBinderFactory"]) : undefined;
            this.url = _data["Url"] ? IUrlHelper.fromJS(_data["Url"]) : undefined;
            this.objectValidator = _data["ObjectValidator"] ? IObjectModelValidator.fromJS(_data["ObjectValidator"]) : undefined;
            this.problemDetailsFactory = _data["ProblemDetailsFactory"] ? ProblemDetailsFactory.fromJS(_data["ProblemDetailsFactory"]) : undefined;
            this.user = _data["User"] ? ClaimsPrincipal.fromJS(_data["User"]) : undefined;
        }
    };
    ControllerBase.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'ControllerBase' cannot be instantiated.");
    };
    ControllerBase.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["HttpContext"] = this.httpContext ? this.httpContext.toJSON() : undefined;
        data["Request"] = this.request ? this.request.toJSON() : undefined;
        data["Response"] = this.response ? this.response.toJSON() : undefined;
        data["RouteData"] = this.routeData ? this.routeData.toJSON() : undefined;
        data["ModelState"] = this.modelState ? this.modelState.toJSON() : undefined;
        data["ControllerContext"] = this.controllerContext ? this.controllerContext.toJSON() : undefined;
        data["MetadataProvider"] = this.metadataProvider ? this.metadataProvider.toJSON() : undefined;
        data["ModelBinderFactory"] = this.modelBinderFactory ? this.modelBinderFactory.toJSON() : undefined;
        data["Url"] = this.url ? this.url.toJSON() : undefined;
        data["ObjectValidator"] = this.objectValidator ? this.objectValidator.toJSON() : undefined;
        data["ProblemDetailsFactory"] = this.problemDetailsFactory ? this.problemDetailsFactory.toJSON() : undefined;
        data["User"] = this.user ? this.user.toJSON() : undefined;
        return data;
    };
    return ControllerBase;
}());
exports.ControllerBase = ControllerBase;
var ClientesController = /** @class */ (function (_super) {
    __extends(ClientesController, _super);
    function ClientesController(data) {
        return _super.call(this, data) || this;
    }
    ClientesController.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
    };
    ClientesController.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ClientesController();
        result.init(data);
        return result;
    };
    ClientesController.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return ClientesController;
}(ControllerBase));
exports.ClientesController = ClientesController;
var HttpContext = /** @class */ (function () {
    function HttpContext(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HttpContext.prototype.init = function (_data) {
    };
    HttpContext.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'HttpContext' cannot be instantiated.");
    };
    HttpContext.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return HttpContext;
}());
exports.HttpContext = HttpContext;
var HttpRequest = /** @class */ (function () {
    function HttpRequest(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.routeValues = new RouteValueDictionary();
        }
    }
    HttpRequest.prototype.init = function (_data) {
        if (_data) {
            this.bodyReader = _data["BodyReader"] ? PipeReader.fromJS(_data["BodyReader"]) : undefined;
            this.routeValues = _data["RouteValues"] ? RouteValueDictionary.fromJS(_data["RouteValues"]) : new RouteValueDictionary();
        }
    };
    HttpRequest.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'HttpRequest' cannot be instantiated.");
    };
    HttpRequest.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["BodyReader"] = this.bodyReader ? this.bodyReader.toJSON() : undefined;
        data["RouteValues"] = this.routeValues ? this.routeValues.toJSON() : undefined;
        return data;
    };
    return HttpRequest;
}());
exports.HttpRequest = HttpRequest;
var PipeReader = /** @class */ (function () {
    function PipeReader(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PipeReader.prototype.init = function (_data) {
    };
    PipeReader.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'PipeReader' cannot be instantiated.");
    };
    PipeReader.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return PipeReader;
}());
exports.PipeReader = PipeReader;
var RouteValueDictionary = /** @class */ (function () {
    function RouteValueDictionary(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this._arrayStorage = [];
            this.keys = [];
            this.values = [];
        }
    }
    RouteValueDictionary.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["_arrayStorage"])) {
                this._arrayStorage = [];
                for (var _i = 0, _a = _data["_arrayStorage"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this._arrayStorage.push(KeyValuePairOfStringAndObject.fromJS(item));
                }
            }
            this._propertyStorage = _data["_propertyStorage"] ? PropertyStorage.fromJS(_data["_propertyStorage"]) : undefined;
            this.item = _data["Item"];
            this.comparer = _data["Comparer"] ? IEqualityComparerOfString.fromJS(_data["Comparer"]) : undefined;
            this.count = _data["Count"];
            if (Array.isArray(_data["Keys"])) {
                this.keys = [];
                for (var _b = 0, _c = _data["Keys"]; _b < _c.length; _b++) {
                    var item = _c[_b];
                    this.keys.push(item);
                }
            }
            if (Array.isArray(_data["Values"])) {
                this.values = [];
                for (var _d = 0, _e = _data["Values"]; _d < _e.length; _d++) {
                    var item = _e[_d];
                    this.values.push(item);
                }
            }
        }
    };
    RouteValueDictionary.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new RouteValueDictionary();
        result.init(data);
        return result;
    };
    RouteValueDictionary.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this._arrayStorage)) {
            data["_arrayStorage"] = [];
            for (var _i = 0, _a = this._arrayStorage; _i < _a.length; _i++) {
                var item = _a[_i];
                data["_arrayStorage"].push(item.toJSON());
            }
        }
        data["_propertyStorage"] = this._propertyStorage ? this._propertyStorage.toJSON() : undefined;
        data["Item"] = this.item;
        data["Comparer"] = this.comparer ? this.comparer.toJSON() : undefined;
        data["Count"] = this.count;
        if (Array.isArray(this.keys)) {
            data["Keys"] = [];
            for (var _b = 0, _c = this.keys; _b < _c.length; _b++) {
                var item = _c[_b];
                data["Keys"].push(item);
            }
        }
        if (Array.isArray(this.values)) {
            data["Values"] = [];
            for (var _d = 0, _e = this.values; _d < _e.length; _d++) {
                var item = _e[_d];
                data["Values"].push(item);
            }
        }
        return data;
    };
    return RouteValueDictionary;
}());
exports.RouteValueDictionary = RouteValueDictionary;
var KeyValuePairOfStringAndObject = /** @class */ (function () {
    function KeyValuePairOfStringAndObject(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    KeyValuePairOfStringAndObject.prototype.init = function (_data) {
        if (_data) {
            this.key = _data["Key"];
            this.value = _data["Value"];
        }
    };
    KeyValuePairOfStringAndObject.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new KeyValuePairOfStringAndObject();
        result.init(data);
        return result;
    };
    KeyValuePairOfStringAndObject.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Key"] = this.key;
        data["Value"] = this.value;
        return data;
    };
    return KeyValuePairOfStringAndObject;
}());
exports.KeyValuePairOfStringAndObject = KeyValuePairOfStringAndObject;
var PropertyStorage = /** @class */ (function () {
    function PropertyStorage(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.properties = [];
        }
    }
    PropertyStorage.prototype.init = function (_data) {
        if (_data) {
            this.value = _data["Value"];
            if (Array.isArray(_data["Properties"])) {
                this.properties = [];
                for (var _i = 0, _a = _data["Properties"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.properties.push(PropertyHelper.fromJS(item));
                }
            }
        }
    };
    PropertyStorage.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PropertyStorage();
        result.init(data);
        return result;
    };
    PropertyStorage.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Value"] = this.value;
        if (Array.isArray(this.properties)) {
            data["Properties"] = [];
            for (var _i = 0, _a = this.properties; _i < _a.length; _i++) {
                var item = _a[_i];
                data["Properties"].push(item.toJSON());
            }
        }
        return data;
    };
    return PropertyStorage;
}());
exports.PropertyStorage = PropertyStorage;
var PropertyHelper = /** @class */ (function () {
    function PropertyHelper(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.valueGetter = new FuncOfObjectAndObject();
            this.valueSetter = new ActionOfObjectAndObject();
        }
    }
    PropertyHelper.prototype.init = function (_data) {
        if (_data) {
            this.property = _data["Property"] ? PropertyInfo.fromJS(_data["Property"]) : undefined;
            this.name = _data["Name"];
            this.valueGetter = _data["ValueGetter"] ? FuncOfObjectAndObject.fromJS(_data["ValueGetter"]) : new FuncOfObjectAndObject();
            this.valueSetter = _data["ValueSetter"] ? ActionOfObjectAndObject.fromJS(_data["ValueSetter"]) : new ActionOfObjectAndObject();
        }
    };
    PropertyHelper.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PropertyHelper();
        result.init(data);
        return result;
    };
    PropertyHelper.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Property"] = this.property ? this.property.toJSON() : undefined;
        data["Name"] = this.name;
        data["ValueGetter"] = this.valueGetter ? this.valueGetter.toJSON() : undefined;
        data["ValueSetter"] = this.valueSetter ? this.valueSetter.toJSON() : undefined;
        return data;
    };
    return PropertyHelper;
}());
exports.PropertyHelper = PropertyHelper;
var MemberInfo = /** @class */ (function () {
    function MemberInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.customAttributes = [];
        }
    }
    MemberInfo.prototype.init = function (_data) {
        if (_data) {
            this.module = _data["Module"] ? Module.fromJS(_data["Module"]) : undefined;
            if (Array.isArray(_data["CustomAttributes"])) {
                this.customAttributes = [];
                for (var _i = 0, _a = _data["CustomAttributes"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
                }
            }
            this.isCollectible = _data["IsCollectible"];
            this.metadataToken = _data["MetadataToken"];
        }
    };
    MemberInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'MemberInfo' cannot be instantiated.");
    };
    MemberInfo.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Module"] = this.module ? this.module.toJSON() : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["CustomAttributes"] = [];
            for (var _i = 0, _a = this.customAttributes; _i < _a.length; _i++) {
                var item = _a[_i];
                data["CustomAttributes"].push(item.toJSON());
            }
        }
        data["IsCollectible"] = this.isCollectible;
        data["MetadataToken"] = this.metadataToken;
        return data;
    };
    return MemberInfo;
}());
exports.MemberInfo = MemberInfo;
var PropertyInfo = /** @class */ (function (_super) {
    __extends(PropertyInfo, _super);
    function PropertyInfo(data) {
        return _super.call(this, data) || this;
    }
    PropertyInfo.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
        if (_data) {
            this.memberType = _data["MemberType"];
            this.isSpecialName = _data["IsSpecialName"];
            this.getMethod = _data["GetMethod"] ? MethodInfo.fromJS(_data["GetMethod"]) : undefined;
            this.setMethod = _data["SetMethod"] ? MethodInfo.fromJS(_data["SetMethod"]) : undefined;
        }
    };
    PropertyInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'PropertyInfo' cannot be instantiated.");
    };
    PropertyInfo.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["MemberType"] = this.memberType;
        data["IsSpecialName"] = this.isSpecialName;
        data["GetMethod"] = this.getMethod ? this.getMethod.toJSON() : undefined;
        data["SetMethod"] = this.setMethod ? this.setMethod.toJSON() : undefined;
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return PropertyInfo;
}(MemberInfo));
exports.PropertyInfo = PropertyInfo;
var MemberTypes;
(function (MemberTypes) {
    MemberTypes[MemberTypes["Constructor"] = 1] = "Constructor";
    MemberTypes[MemberTypes["Event"] = 2] = "Event";
    MemberTypes[MemberTypes["Field"] = 4] = "Field";
    MemberTypes[MemberTypes["Method"] = 8] = "Method";
    MemberTypes[MemberTypes["Property"] = 16] = "Property";
    MemberTypes[MemberTypes["TypeInfo"] = 32] = "TypeInfo";
    MemberTypes[MemberTypes["Custom"] = 64] = "Custom";
    MemberTypes[MemberTypes["NestedType"] = 128] = "NestedType";
    MemberTypes[MemberTypes["All"] = 191] = "All";
})(MemberTypes = exports.MemberTypes || (exports.MemberTypes = {}));
var MethodBase = /** @class */ (function (_super) {
    __extends(MethodBase, _super);
    function MethodBase(data) {
        return _super.call(this, data) || this;
    }
    MethodBase.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
        if (_data) {
            this.methodImplementationFlags = _data["MethodImplementationFlags"];
            this.callingConvention = _data["CallingConvention"];
            this.isAbstract = _data["IsAbstract"];
            this.isConstructor = _data["IsConstructor"];
            this.isFinal = _data["IsFinal"];
            this.isHideBySig = _data["IsHideBySig"];
            this.isSpecialName = _data["IsSpecialName"];
            this.isStatic = _data["IsStatic"];
            this.isVirtual = _data["IsVirtual"];
            this.isAssembly = _data["IsAssembly"];
            this.isFamily = _data["IsFamily"];
            this.isFamilyAndAssembly = _data["IsFamilyAndAssembly"];
            this.isFamilyOrAssembly = _data["IsFamilyOrAssembly"];
            this.isPrivate = _data["IsPrivate"];
            this.isPublic = _data["IsPublic"];
            this.isConstructedGenericMethod = _data["IsConstructedGenericMethod"];
            this.isGenericMethod = _data["IsGenericMethod"];
            this.isGenericMethodDefinition = _data["IsGenericMethodDefinition"];
            this.containsGenericParameters = _data["ContainsGenericParameters"];
            this.isSecurityCritical = _data["IsSecurityCritical"];
            this.isSecuritySafeCritical = _data["IsSecuritySafeCritical"];
            this.isSecurityTransparent = _data["IsSecurityTransparent"];
        }
    };
    MethodBase.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'MethodBase' cannot be instantiated.");
    };
    MethodBase.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["MethodImplementationFlags"] = this.methodImplementationFlags;
        data["CallingConvention"] = this.callingConvention;
        data["IsAbstract"] = this.isAbstract;
        data["IsConstructor"] = this.isConstructor;
        data["IsFinal"] = this.isFinal;
        data["IsHideBySig"] = this.isHideBySig;
        data["IsSpecialName"] = this.isSpecialName;
        data["IsStatic"] = this.isStatic;
        data["IsVirtual"] = this.isVirtual;
        data["IsAssembly"] = this.isAssembly;
        data["IsFamily"] = this.isFamily;
        data["IsFamilyAndAssembly"] = this.isFamilyAndAssembly;
        data["IsFamilyOrAssembly"] = this.isFamilyOrAssembly;
        data["IsPrivate"] = this.isPrivate;
        data["IsPublic"] = this.isPublic;
        data["IsConstructedGenericMethod"] = this.isConstructedGenericMethod;
        data["IsGenericMethod"] = this.isGenericMethod;
        data["IsGenericMethodDefinition"] = this.isGenericMethodDefinition;
        data["ContainsGenericParameters"] = this.containsGenericParameters;
        data["IsSecurityCritical"] = this.isSecurityCritical;
        data["IsSecuritySafeCritical"] = this.isSecuritySafeCritical;
        data["IsSecurityTransparent"] = this.isSecurityTransparent;
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return MethodBase;
}(MemberInfo));
exports.MethodBase = MethodBase;
var MethodInfo = /** @class */ (function (_super) {
    __extends(MethodInfo, _super);
    function MethodInfo(data) {
        var _this = _super.call(this, data) || this;
        if (!data) {
            _this.returnParameter = new ParameterInfo();
        }
        return _this;
    }
    MethodInfo.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
        if (_data) {
            this.memberType = _data["MemberType"];
            this.returnParameter = _data["ReturnParameter"] ? ParameterInfo.fromJS(_data["ReturnParameter"]) : new ParameterInfo();
            this.returnType = _data["ReturnType"];
        }
    };
    MethodInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'MethodInfo' cannot be instantiated.");
    };
    MethodInfo.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["MemberType"] = this.memberType;
        data["ReturnParameter"] = this.returnParameter ? this.returnParameter.toJSON() : undefined;
        data["ReturnType"] = this.returnType;
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return MethodInfo;
}(MethodBase));
exports.MethodInfo = MethodInfo;
var ParameterInfo = /** @class */ (function () {
    function ParameterInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.customAttributes = [];
        }
    }
    ParameterInfo.prototype.init = function (_data) {
        if (_data) {
            this.attributes = _data["Attributes"];
            this.member = _data["Member"] ? MemberInfo.fromJS(_data["Member"]) : undefined;
            this.name = _data["Name"];
            this.parameterType = _data["ParameterType"];
            this.position = _data["Position"];
            this.isIn = _data["IsIn"];
            this.isLcid = _data["IsLcid"];
            this.isOptional = _data["IsOptional"];
            this.isOut = _data["IsOut"];
            this.isRetval = _data["IsRetval"];
            this.defaultValue = _data["DefaultValue"];
            this.rawDefaultValue = _data["RawDefaultValue"];
            this.hasDefaultValue = _data["HasDefaultValue"];
            if (Array.isArray(_data["CustomAttributes"])) {
                this.customAttributes = [];
                for (var _i = 0, _a = _data["CustomAttributes"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
                }
            }
            this.metadataToken = _data["MetadataToken"];
        }
    };
    ParameterInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ParameterInfo();
        result.init(data);
        return result;
    };
    ParameterInfo.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Attributes"] = this.attributes;
        data["Member"] = this.member ? this.member.toJSON() : undefined;
        data["Name"] = this.name;
        data["ParameterType"] = this.parameterType;
        data["Position"] = this.position;
        data["IsIn"] = this.isIn;
        data["IsLcid"] = this.isLcid;
        data["IsOptional"] = this.isOptional;
        data["IsOut"] = this.isOut;
        data["IsRetval"] = this.isRetval;
        data["DefaultValue"] = this.defaultValue;
        data["RawDefaultValue"] = this.rawDefaultValue;
        data["HasDefaultValue"] = this.hasDefaultValue;
        if (Array.isArray(this.customAttributes)) {
            data["CustomAttributes"] = [];
            for (var _i = 0, _a = this.customAttributes; _i < _a.length; _i++) {
                var item = _a[_i];
                data["CustomAttributes"].push(item.toJSON());
            }
        }
        data["MetadataToken"] = this.metadataToken;
        return data;
    };
    return ParameterInfo;
}());
exports.ParameterInfo = ParameterInfo;
var ParameterAttributes;
(function (ParameterAttributes) {
    ParameterAttributes[ParameterAttributes["None"] = 0] = "None";
    ParameterAttributes[ParameterAttributes["In"] = 1] = "In";
    ParameterAttributes[ParameterAttributes["Out"] = 2] = "Out";
    ParameterAttributes[ParameterAttributes["Lcid"] = 4] = "Lcid";
    ParameterAttributes[ParameterAttributes["Retval"] = 8] = "Retval";
    ParameterAttributes[ParameterAttributes["Optional"] = 16] = "Optional";
    ParameterAttributes[ParameterAttributes["HasDefault"] = 4096] = "HasDefault";
    ParameterAttributes[ParameterAttributes["HasFieldMarshal"] = 8192] = "HasFieldMarshal";
    ParameterAttributes[ParameterAttributes["Reserved3"] = 16384] = "Reserved3";
    ParameterAttributes[ParameterAttributes["Reserved4"] = 32768] = "Reserved4";
    ParameterAttributes[ParameterAttributes["ReservedMask"] = 61440] = "ReservedMask";
})(ParameterAttributes = exports.ParameterAttributes || (exports.ParameterAttributes = {}));
var Module = /** @class */ (function () {
    function Module(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.moduleHandle = new ModuleHandle();
            this.customAttributes = [];
        }
    }
    Module.prototype.init = function (_data) {
        if (_data) {
            this.assembly = _data["Assembly"] ? Assembly.fromJS(_data["Assembly"]) : undefined;
            this.fullyQualifiedName = _data["FullyQualifiedName"];
            this.name = _data["Name"];
            this.mDStreamVersion = _data["MDStreamVersion"];
            this.moduleVersionId = _data["ModuleVersionId"];
            this.scopeName = _data["ScopeName"];
            this.moduleHandle = _data["ModuleHandle"] ? ModuleHandle.fromJS(_data["ModuleHandle"]) : new ModuleHandle();
            if (Array.isArray(_data["CustomAttributes"])) {
                this.customAttributes = [];
                for (var _i = 0, _a = _data["CustomAttributes"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
                }
            }
            this.metadataToken = _data["MetadataToken"];
        }
    };
    Module.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'Module' cannot be instantiated.");
    };
    Module.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Assembly"] = this.assembly ? this.assembly.toJSON() : undefined;
        data["FullyQualifiedName"] = this.fullyQualifiedName;
        data["Name"] = this.name;
        data["MDStreamVersion"] = this.mDStreamVersion;
        data["ModuleVersionId"] = this.moduleVersionId;
        data["ScopeName"] = this.scopeName;
        data["ModuleHandle"] = this.moduleHandle ? this.moduleHandle.toJSON() : undefined;
        if (Array.isArray(this.customAttributes)) {
            data["CustomAttributes"] = [];
            for (var _i = 0, _a = this.customAttributes; _i < _a.length; _i++) {
                var item = _a[_i];
                data["CustomAttributes"].push(item.toJSON());
            }
        }
        data["MetadataToken"] = this.metadataToken;
        return data;
    };
    return Module;
}());
exports.Module = Module;
var Assembly = /** @class */ (function () {
    function Assembly(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.definedTypes = [];
            this.exportedTypes = [];
            this.customAttributes = [];
            this.modules = [];
        }
    }
    Assembly.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["DefinedTypes"])) {
                this.definedTypes = [];
                for (var _i = 0, _a = _data["DefinedTypes"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.definedTypes.push(item);
                }
            }
            if (Array.isArray(_data["ExportedTypes"])) {
                this.exportedTypes = [];
                for (var _b = 0, _c = _data["ExportedTypes"]; _b < _c.length; _b++) {
                    var item = _c[_b];
                    this.exportedTypes.push(item);
                }
            }
            this.codeBase = _data["CodeBase"];
            this.entryPoint = _data["EntryPoint"] ? MethodInfo.fromJS(_data["EntryPoint"]) : undefined;
            this.fullName = _data["FullName"];
            this.imageRuntimeVersion = _data["ImageRuntimeVersion"];
            this.isDynamic = _data["IsDynamic"];
            this.location = _data["Location"];
            this.reflectionOnly = _data["ReflectionOnly"];
            this.isCollectible = _data["IsCollectible"];
            this.isFullyTrusted = _data["IsFullyTrusted"];
            if (Array.isArray(_data["CustomAttributes"])) {
                this.customAttributes = [];
                for (var _d = 0, _e = _data["CustomAttributes"]; _d < _e.length; _d++) {
                    var item = _e[_d];
                    this.customAttributes.push(CustomAttributeData.fromJS(item));
                }
            }
            this.escapedCodeBase = _data["EscapedCodeBase"];
            this.manifestModule = _data["ManifestModule"] ? Module.fromJS(_data["ManifestModule"]) : undefined;
            if (Array.isArray(_data["Modules"])) {
                this.modules = [];
                for (var _f = 0, _g = _data["Modules"]; _f < _g.length; _f++) {
                    var item = _g[_f];
                    this.modules.push(Module.fromJS(item));
                }
            }
            this.globalAssemblyCache = _data["GlobalAssemblyCache"];
            this.hostContext = _data["HostContext"];
            this.securityRuleSet = _data["SecurityRuleSet"];
        }
    };
    Assembly.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'Assembly' cannot be instantiated.");
    };
    Assembly.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.definedTypes)) {
            data["DefinedTypes"] = [];
            for (var _i = 0, _a = this.definedTypes; _i < _a.length; _i++) {
                var item = _a[_i];
                data["DefinedTypes"].push(item);
            }
        }
        if (Array.isArray(this.exportedTypes)) {
            data["ExportedTypes"] = [];
            for (var _b = 0, _c = this.exportedTypes; _b < _c.length; _b++) {
                var item = _c[_b];
                data["ExportedTypes"].push(item);
            }
        }
        data["CodeBase"] = this.codeBase;
        data["EntryPoint"] = this.entryPoint ? this.entryPoint.toJSON() : undefined;
        data["FullName"] = this.fullName;
        data["ImageRuntimeVersion"] = this.imageRuntimeVersion;
        data["IsDynamic"] = this.isDynamic;
        data["Location"] = this.location;
        data["ReflectionOnly"] = this.reflectionOnly;
        data["IsCollectible"] = this.isCollectible;
        data["IsFullyTrusted"] = this.isFullyTrusted;
        if (Array.isArray(this.customAttributes)) {
            data["CustomAttributes"] = [];
            for (var _d = 0, _e = this.customAttributes; _d < _e.length; _d++) {
                var item = _e[_d];
                data["CustomAttributes"].push(item.toJSON());
            }
        }
        data["EscapedCodeBase"] = this.escapedCodeBase;
        data["ManifestModule"] = this.manifestModule ? this.manifestModule.toJSON() : undefined;
        if (Array.isArray(this.modules)) {
            data["Modules"] = [];
            for (var _f = 0, _g = this.modules; _f < _g.length; _f++) {
                var item = _g[_f];
                data["Modules"].push(item.toJSON());
            }
        }
        data["GlobalAssemblyCache"] = this.globalAssemblyCache;
        data["HostContext"] = this.hostContext;
        data["SecurityRuleSet"] = this.securityRuleSet;
        return data;
    };
    return Assembly;
}());
exports.Assembly = Assembly;
var CustomAttributeData = /** @class */ (function () {
    function CustomAttributeData(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.constructorArguments = [];
            this.namedArguments = [];
        }
    }
    CustomAttributeData.prototype.init = function (_data) {
        if (_data) {
            this.attributeType = _data["AttributeType"];
            this.constructor_ = _data["Constructor"] ? ConstructorInfo.fromJS(_data["Constructor"]) : undefined;
            if (Array.isArray(_data["ConstructorArguments"])) {
                this.constructorArguments = [];
                for (var _i = 0, _a = _data["ConstructorArguments"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.constructorArguments.push(CustomAttributeTypedArgument.fromJS(item));
                }
            }
            if (Array.isArray(_data["NamedArguments"])) {
                this.namedArguments = [];
                for (var _b = 0, _c = _data["NamedArguments"]; _b < _c.length; _b++) {
                    var item = _c[_b];
                    this.namedArguments.push(CustomAttributeNamedArgument.fromJS(item));
                }
            }
        }
    };
    CustomAttributeData.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CustomAttributeData();
        result.init(data);
        return result;
    };
    CustomAttributeData.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["AttributeType"] = this.attributeType;
        data["Constructor"] = this.constructor_ ? this.constructor_.toJSON() : undefined;
        if (Array.isArray(this.constructorArguments)) {
            data["ConstructorArguments"] = [];
            for (var _i = 0, _a = this.constructorArguments; _i < _a.length; _i++) {
                var item = _a[_i];
                data["ConstructorArguments"].push(item.toJSON());
            }
        }
        if (Array.isArray(this.namedArguments)) {
            data["NamedArguments"] = [];
            for (var _b = 0, _c = this.namedArguments; _b < _c.length; _b++) {
                var item = _c[_b];
                data["NamedArguments"].push(item.toJSON());
            }
        }
        return data;
    };
    return CustomAttributeData;
}());
exports.CustomAttributeData = CustomAttributeData;
var ConstructorInfo = /** @class */ (function (_super) {
    __extends(ConstructorInfo, _super);
    function ConstructorInfo(data) {
        return _super.call(this, data) || this;
    }
    ConstructorInfo.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
        if (_data) {
            this.memberType = _data["MemberType"];
        }
    };
    ConstructorInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'ConstructorInfo' cannot be instantiated.");
    };
    ConstructorInfo.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["MemberType"] = this.memberType;
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return ConstructorInfo;
}(MethodBase));
exports.ConstructorInfo = ConstructorInfo;
var MethodImplAttributes;
(function (MethodImplAttributes) {
    MethodImplAttributes[MethodImplAttributes["IL"] = 0] = "IL";
    MethodImplAttributes[MethodImplAttributes["Managed"] = 0] = "Managed";
    MethodImplAttributes[MethodImplAttributes["Native"] = 1] = "Native";
    MethodImplAttributes[MethodImplAttributes["OPTIL"] = 2] = "OPTIL";
    MethodImplAttributes[MethodImplAttributes["Runtime"] = 3] = "Runtime";
    MethodImplAttributes[MethodImplAttributes["CodeTypeMask"] = 3] = "CodeTypeMask";
    MethodImplAttributes[MethodImplAttributes["Unmanaged"] = 4] = "Unmanaged";
    MethodImplAttributes[MethodImplAttributes["ManagedMask"] = 4] = "ManagedMask";
    MethodImplAttributes[MethodImplAttributes["NoInlining"] = 8] = "NoInlining";
    MethodImplAttributes[MethodImplAttributes["ForwardRef"] = 16] = "ForwardRef";
    MethodImplAttributes[MethodImplAttributes["Synchronized"] = 32] = "Synchronized";
    MethodImplAttributes[MethodImplAttributes["NoOptimization"] = 64] = "NoOptimization";
    MethodImplAttributes[MethodImplAttributes["PreserveSig"] = 128] = "PreserveSig";
    MethodImplAttributes[MethodImplAttributes["AggressiveInlining"] = 256] = "AggressiveInlining";
    MethodImplAttributes[MethodImplAttributes["AggressiveOptimization"] = 512] = "AggressiveOptimization";
    MethodImplAttributes[MethodImplAttributes["InternalCall"] = 4096] = "InternalCall";
    MethodImplAttributes[MethodImplAttributes["MaxMethodImplVal"] = 65535] = "MaxMethodImplVal";
})(MethodImplAttributes = exports.MethodImplAttributes || (exports.MethodImplAttributes = {}));
var CallingConventions;
(function (CallingConventions) {
    CallingConventions[CallingConventions["Standard"] = 1] = "Standard";
    CallingConventions[CallingConventions["VarArgs"] = 2] = "VarArgs";
    CallingConventions[CallingConventions["Any"] = 3] = "Any";
    CallingConventions[CallingConventions["HasThis"] = 32] = "HasThis";
    CallingConventions[CallingConventions["ExplicitThis"] = 64] = "ExplicitThis";
})(CallingConventions = exports.CallingConventions || (exports.CallingConventions = {}));
var CustomAttributeTypedArgument = /** @class */ (function () {
    function CustomAttributeTypedArgument(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    CustomAttributeTypedArgument.prototype.init = function (_data) {
        if (_data) {
            this.argumentType = _data["ArgumentType"];
            this.value = _data["Value"];
        }
    };
    CustomAttributeTypedArgument.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CustomAttributeTypedArgument();
        result.init(data);
        return result;
    };
    CustomAttributeTypedArgument.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["ArgumentType"] = this.argumentType;
        data["Value"] = this.value;
        return data;
    };
    return CustomAttributeTypedArgument;
}());
exports.CustomAttributeTypedArgument = CustomAttributeTypedArgument;
var CustomAttributeNamedArgument = /** @class */ (function () {
    function CustomAttributeNamedArgument(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.typedValue = new CustomAttributeTypedArgument();
        }
    }
    CustomAttributeNamedArgument.prototype.init = function (_data) {
        if (_data) {
            this.memberInfo = _data["MemberInfo"] ? MemberInfo.fromJS(_data["MemberInfo"]) : undefined;
            this.typedValue = _data["TypedValue"] ? CustomAttributeTypedArgument.fromJS(_data["TypedValue"]) : new CustomAttributeTypedArgument();
            this.memberName = _data["MemberName"];
            this.isField = _data["IsField"];
        }
    };
    CustomAttributeNamedArgument.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new CustomAttributeNamedArgument();
        result.init(data);
        return result;
    };
    CustomAttributeNamedArgument.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["MemberInfo"] = this.memberInfo ? this.memberInfo.toJSON() : undefined;
        data["TypedValue"] = this.typedValue ? this.typedValue.toJSON() : undefined;
        data["MemberName"] = this.memberName;
        data["IsField"] = this.isField;
        return data;
    };
    return CustomAttributeNamedArgument;
}());
exports.CustomAttributeNamedArgument = CustomAttributeNamedArgument;
var SecurityRuleSet;
(function (SecurityRuleSet) {
    SecurityRuleSet[SecurityRuleSet["None"] = 0] = "None";
    SecurityRuleSet[SecurityRuleSet["Level1"] = 1] = "Level1";
    SecurityRuleSet[SecurityRuleSet["Level2"] = 2] = "Level2";
})(SecurityRuleSet = exports.SecurityRuleSet || (exports.SecurityRuleSet = {}));
var ModuleHandle = /** @class */ (function () {
    function ModuleHandle(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ModuleHandle.prototype.init = function (_data) {
        if (_data) {
            this.mDStreamVersion = _data["MDStreamVersion"];
        }
    };
    ModuleHandle.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ModuleHandle();
        result.init(data);
        return result;
    };
    ModuleHandle.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["MDStreamVersion"] = this.mDStreamVersion;
        return data;
    };
    return ModuleHandle;
}());
exports.ModuleHandle = ModuleHandle;
var Delegate = /** @class */ (function () {
    function Delegate(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    Delegate.prototype.init = function (_data) {
        if (_data) {
            this.target = _data["Target"];
            this.method = _data["Method"] ? MethodInfo.fromJS(_data["Method"]) : undefined;
        }
    };
    Delegate.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'Delegate' cannot be instantiated.");
    };
    Delegate.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Target"] = this.target;
        data["Method"] = this.method ? this.method.toJSON() : undefined;
        return data;
    };
    return Delegate;
}());
exports.Delegate = Delegate;
var MulticastDelegate = /** @class */ (function (_super) {
    __extends(MulticastDelegate, _super);
    function MulticastDelegate(data) {
        return _super.call(this, data) || this;
    }
    MulticastDelegate.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
    };
    MulticastDelegate.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'MulticastDelegate' cannot be instantiated.");
    };
    MulticastDelegate.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return MulticastDelegate;
}(Delegate));
exports.MulticastDelegate = MulticastDelegate;
var FuncOfObjectAndObject = /** @class */ (function (_super) {
    __extends(FuncOfObjectAndObject, _super);
    function FuncOfObjectAndObject(data) {
        return _super.call(this, data) || this;
    }
    FuncOfObjectAndObject.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
    };
    FuncOfObjectAndObject.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new FuncOfObjectAndObject();
        result.init(data);
        return result;
    };
    FuncOfObjectAndObject.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return FuncOfObjectAndObject;
}(MulticastDelegate));
exports.FuncOfObjectAndObject = FuncOfObjectAndObject;
var ActionOfObjectAndObject = /** @class */ (function (_super) {
    __extends(ActionOfObjectAndObject, _super);
    function ActionOfObjectAndObject(data) {
        return _super.call(this, data) || this;
    }
    ActionOfObjectAndObject.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
    };
    ActionOfObjectAndObject.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ActionOfObjectAndObject();
        result.init(data);
        return result;
    };
    ActionOfObjectAndObject.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return ActionOfObjectAndObject;
}(MulticastDelegate));
exports.ActionOfObjectAndObject = ActionOfObjectAndObject;
var IEqualityComparerOfString = /** @class */ (function () {
    function IEqualityComparerOfString(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    IEqualityComparerOfString.prototype.init = function (_data) {
    };
    IEqualityComparerOfString.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IEqualityComparerOfString' cannot be instantiated.");
    };
    IEqualityComparerOfString.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return IEqualityComparerOfString;
}());
exports.IEqualityComparerOfString = IEqualityComparerOfString;
var HttpResponse = /** @class */ (function () {
    function HttpResponse(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HttpResponse.prototype.init = function (_data) {
        if (_data) {
            this.bodyWriter = _data["BodyWriter"] ? PipeWriter.fromJS(_data["BodyWriter"]) : undefined;
        }
    };
    HttpResponse.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'HttpResponse' cannot be instantiated.");
    };
    HttpResponse.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["BodyWriter"] = this.bodyWriter ? this.bodyWriter.toJSON() : undefined;
        return data;
    };
    return HttpResponse;
}());
exports.HttpResponse = HttpResponse;
var PipeWriter = /** @class */ (function () {
    function PipeWriter(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PipeWriter.prototype.init = function (_data) {
    };
    PipeWriter.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'PipeWriter' cannot be instantiated.");
    };
    PipeWriter.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return PipeWriter;
}());
exports.PipeWriter = PipeWriter;
var RouteData = /** @class */ (function () {
    function RouteData(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.dataTokens = new RouteValueDictionary();
            this.routers = [];
            this.values = new RouteValueDictionary();
        }
    }
    RouteData.prototype.init = function (_data) {
        if (_data) {
            this.dataTokens = _data["DataTokens"] ? RouteValueDictionary.fromJS(_data["DataTokens"]) : new RouteValueDictionary();
            if (Array.isArray(_data["Routers"])) {
                this.routers = [];
                for (var _i = 0, _a = _data["Routers"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.routers.push(IRouter.fromJS(item));
                }
            }
            this.values = _data["Values"] ? RouteValueDictionary.fromJS(_data["Values"]) : new RouteValueDictionary();
        }
    };
    RouteData.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new RouteData();
        result.init(data);
        return result;
    };
    RouteData.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["DataTokens"] = this.dataTokens ? this.dataTokens.toJSON() : undefined;
        if (Array.isArray(this.routers)) {
            data["Routers"] = [];
            for (var _i = 0, _a = this.routers; _i < _a.length; _i++) {
                var item = _a[_i];
                data["Routers"].push(item.toJSON());
            }
        }
        data["Values"] = this.values ? this.values.toJSON() : undefined;
        return data;
    };
    return RouteData;
}());
exports.RouteData = RouteData;
var IRouter = /** @class */ (function () {
    function IRouter(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    IRouter.prototype.init = function (_data) {
    };
    IRouter.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IRouter' cannot be instantiated.");
    };
    IRouter.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return IRouter;
}());
exports.IRouter = IRouter;
var ModelStateDictionary = /** @class */ (function () {
    function ModelStateDictionary(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.keys = [];
            this.values = [];
        }
    }
    ModelStateDictionary.prototype.init = function (_data) {
        if (_data) {
            this.root = _data["Root"] ? ModelStateEntry.fromJS(_data["Root"]) : undefined;
            this.maxAllowedErrors = _data["MaxAllowedErrors"];
            this.hasReachedMaxErrors = _data["HasReachedMaxErrors"];
            this.errorCount = _data["ErrorCount"];
            this.count = _data["Count"];
            if (Array.isArray(_data["Keys"])) {
                this.keys = [];
                for (var _i = 0, _a = _data["Keys"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.keys.push(item);
                }
            }
            if (Array.isArray(_data["Values"])) {
                this.values = [];
                for (var _b = 0, _c = _data["Values"]; _b < _c.length; _b++) {
                    var item = _c[_b];
                    this.values.push(item);
                }
            }
            this.isValid = _data["IsValid"];
            this.validationState = _data["ValidationState"];
            this.item = _data["Item"] ? ModelStateEntry.fromJS(_data["Item"]) : undefined;
        }
    };
    ModelStateDictionary.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ModelStateDictionary();
        result.init(data);
        return result;
    };
    ModelStateDictionary.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Root"] = this.root ? this.root.toJSON() : undefined;
        data["MaxAllowedErrors"] = this.maxAllowedErrors;
        data["HasReachedMaxErrors"] = this.hasReachedMaxErrors;
        data["ErrorCount"] = this.errorCount;
        data["Count"] = this.count;
        if (Array.isArray(this.keys)) {
            data["Keys"] = [];
            for (var _i = 0, _a = this.keys; _i < _a.length; _i++) {
                var item = _a[_i];
                data["Keys"].push(item);
            }
        }
        if (Array.isArray(this.values)) {
            data["Values"] = [];
            for (var _b = 0, _c = this.values; _b < _c.length; _b++) {
                var item = _c[_b];
                data["Values"].push(item);
            }
        }
        data["IsValid"] = this.isValid;
        data["ValidationState"] = this.validationState;
        data["Item"] = this.item ? this.item.toJSON() : undefined;
        return data;
    };
    return ModelStateDictionary;
}());
exports.ModelStateDictionary = ModelStateDictionary;
var ModelStateEntry = /** @class */ (function () {
    function ModelStateEntry(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.errors = [];
        }
    }
    ModelStateEntry.prototype.init = function (_data) {
        if (_data) {
            this.rawValue = _data["RawValue"];
            this.attemptedValue = _data["AttemptedValue"];
            if (Array.isArray(_data["Errors"])) {
                this.errors = [];
                for (var _i = 0, _a = _data["Errors"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.errors.push(ModelError.fromJS(item));
                }
            }
            this.validationState = _data["ValidationState"];
        }
    };
    ModelStateEntry.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'ModelStateEntry' cannot be instantiated.");
    };
    ModelStateEntry.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["RawValue"] = this.rawValue;
        data["AttemptedValue"] = this.attemptedValue;
        if (Array.isArray(this.errors)) {
            data["Errors"] = [];
            for (var _i = 0, _a = this.errors; _i < _a.length; _i++) {
                var item = _a[_i];
                data["Errors"].push(item.toJSON());
            }
        }
        data["ValidationState"] = this.validationState;
        return data;
    };
    return ModelStateEntry;
}());
exports.ModelStateEntry = ModelStateEntry;
var ModelError = /** @class */ (function () {
    function ModelError(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ModelError.prototype.init = function (_data) {
        if (_data) {
            this.exception = _data["Exception"] ? Exception.fromJS(_data["Exception"]) : undefined;
            this.errorMessage = _data["ErrorMessage"];
        }
    };
    ModelError.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ModelError();
        result.init(data);
        return result;
    };
    ModelError.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Exception"] = this.exception ? this.exception.toJSON() : undefined;
        data["ErrorMessage"] = this.errorMessage;
        return data;
    };
    return ModelError;
}());
exports.ModelError = ModelError;
var Exception = /** @class */ (function () {
    function Exception(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    Exception.prototype.init = function (_data) {
        if (_data) {
            this.stackTrace = _data["StackTrace"];
            this.message = _data["Message"];
            this.innerException = _data["InnerException"] ? Exception.fromJS(_data["InnerException"]) : undefined;
            this.source = _data["Source"];
        }
    };
    Exception.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new Exception();
        result.init(data);
        return result;
    };
    Exception.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["StackTrace"] = this.stackTrace;
        data["Message"] = this.message;
        data["InnerException"] = this.innerException ? this.innerException.toJSON() : undefined;
        data["Source"] = this.source;
        return data;
    };
    return Exception;
}());
exports.Exception = Exception;
var ModelValidationState;
(function (ModelValidationState) {
    ModelValidationState[ModelValidationState["Unvalidated"] = 0] = "Unvalidated";
    ModelValidationState[ModelValidationState["Invalid"] = 1] = "Invalid";
    ModelValidationState[ModelValidationState["Valid"] = 2] = "Valid";
    ModelValidationState[ModelValidationState["Skipped"] = 3] = "Skipped";
})(ModelValidationState = exports.ModelValidationState || (exports.ModelValidationState = {}));
var ActionContext = /** @class */ (function () {
    function ActionContext(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.actionDescriptor = new ActionDescriptor();
            this.modelState = new ModelStateDictionary();
            this.routeData = new RouteData();
        }
    }
    ActionContext.prototype.init = function (_data) {
        if (_data) {
            this.actionDescriptor = _data["ActionDescriptor"] ? ActionDescriptor.fromJS(_data["ActionDescriptor"]) : new ActionDescriptor();
            this.httpContext = _data["HttpContext"] ? HttpContext.fromJS(_data["HttpContext"]) : undefined;
            this.modelState = _data["ModelState"] ? ModelStateDictionary.fromJS(_data["ModelState"]) : new ModelStateDictionary();
            this.routeData = _data["RouteData"] ? RouteData.fromJS(_data["RouteData"]) : new RouteData();
        }
    };
    ActionContext.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ActionContext();
        result.init(data);
        return result;
    };
    ActionContext.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["ActionDescriptor"] = this.actionDescriptor ? this.actionDescriptor.toJSON() : undefined;
        data["HttpContext"] = this.httpContext ? this.httpContext.toJSON() : undefined;
        data["ModelState"] = this.modelState ? this.modelState.toJSON() : undefined;
        data["RouteData"] = this.routeData ? this.routeData.toJSON() : undefined;
        return data;
    };
    return ActionContext;
}());
exports.ActionContext = ActionContext;
var ControllerContext = /** @class */ (function (_super) {
    __extends(ControllerContext, _super);
    function ControllerContext(data) {
        return _super.call(this, data) || this;
    }
    ControllerContext.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
        if (_data) {
            this.actionDescriptor = _data["ActionDescriptor"] ? ControllerActionDescriptor.fromJS(_data["ActionDescriptor"]) : undefined;
            if (Array.isArray(_data["ValueProviderFactories"])) {
                this.valueProviderFactories = [];
                for (var _i = 0, _a = _data["ValueProviderFactories"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.valueProviderFactories.push(IValueProviderFactory.fromJS(item));
                }
            }
        }
    };
    ControllerContext.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ControllerContext(data);
        result.init(data);
        return result;
    };
    ControllerContext.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["ActionDescriptor"] = this.actionDescriptor ? this.actionDescriptor.toJSON() : undefined;
        if (Array.isArray(this.valueProviderFactories)) {
            data["ValueProviderFactories"] = [];
            for (var _i = 0, _a = this.valueProviderFactories; _i < _a.length; _i++) {
                var item = _a[_i];
                data["ValueProviderFactories"].push(item.toJSON());
            }
        }
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return ControllerContext;
}(ActionContext));
exports.ControllerContext = ControllerContext;
var ActionDescriptor = /** @class */ (function () {
    function ActionDescriptor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.routeValues = {};
            this.endpointMetadata = [];
            this.parameters = [];
            this.boundProperties = [];
            this.filterDescriptors = [];
            this.properties = {};
        }
    }
    ActionDescriptor.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["Id"];
            if (_data["RouteValues"]) {
                this.routeValues = {};
                for (var key in _data["RouteValues"]) {
                    if (_data["RouteValues"].hasOwnProperty(key))
                        this.routeValues[key] = _data["RouteValues"][key];
                }
            }
            this.attributeRouteInfo = _data["AttributeRouteInfo"] ? AttributeRouteInfo.fromJS(_data["AttributeRouteInfo"]) : undefined;
            if (Array.isArray(_data["ActionConstraints"])) {
                this.actionConstraints = [];
                for (var _i = 0, _a = _data["ActionConstraints"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.actionConstraints.push(IActionConstraintMetadata.fromJS(item));
                }
            }
            if (Array.isArray(_data["EndpointMetadata"])) {
                this.endpointMetadata = [];
                for (var _b = 0, _c = _data["EndpointMetadata"]; _b < _c.length; _b++) {
                    var item = _c[_b];
                    this.endpointMetadata.push(item);
                }
            }
            if (Array.isArray(_data["Parameters"])) {
                this.parameters = [];
                for (var _d = 0, _e = _data["Parameters"]; _d < _e.length; _d++) {
                    var item = _e[_d];
                    this.parameters.push(ParameterDescriptor.fromJS(item));
                }
            }
            if (Array.isArray(_data["BoundProperties"])) {
                this.boundProperties = [];
                for (var _f = 0, _g = _data["BoundProperties"]; _f < _g.length; _f++) {
                    var item = _g[_f];
                    this.boundProperties.push(ParameterDescriptor.fromJS(item));
                }
            }
            if (Array.isArray(_data["FilterDescriptors"])) {
                this.filterDescriptors = [];
                for (var _h = 0, _j = _data["FilterDescriptors"]; _h < _j.length; _h++) {
                    var item = _j[_h];
                    this.filterDescriptors.push(FilterDescriptor.fromJS(item));
                }
            }
            this.displayName = _data["DisplayName"];
            if (_data["Properties"]) {
                this.properties = {};
                for (var key in _data["Properties"]) {
                    if (_data["Properties"].hasOwnProperty(key))
                        this.properties[key] = _data["Properties"][key];
                }
            }
        }
    };
    ActionDescriptor.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ActionDescriptor();
        result.init(data);
        return result;
    };
    ActionDescriptor.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Id"] = this.id;
        if (this.routeValues) {
            data["RouteValues"] = {};
            for (var key in this.routeValues) {
                if (this.routeValues.hasOwnProperty(key))
                    data["RouteValues"][key] = this.routeValues[key];
            }
        }
        data["AttributeRouteInfo"] = this.attributeRouteInfo ? this.attributeRouteInfo.toJSON() : undefined;
        if (Array.isArray(this.actionConstraints)) {
            data["ActionConstraints"] = [];
            for (var _i = 0, _a = this.actionConstraints; _i < _a.length; _i++) {
                var item = _a[_i];
                data["ActionConstraints"].push(item.toJSON());
            }
        }
        if (Array.isArray(this.endpointMetadata)) {
            data["EndpointMetadata"] = [];
            for (var _b = 0, _c = this.endpointMetadata; _b < _c.length; _b++) {
                var item = _c[_b];
                data["EndpointMetadata"].push(item);
            }
        }
        if (Array.isArray(this.parameters)) {
            data["Parameters"] = [];
            for (var _d = 0, _e = this.parameters; _d < _e.length; _d++) {
                var item = _e[_d];
                data["Parameters"].push(item.toJSON());
            }
        }
        if (Array.isArray(this.boundProperties)) {
            data["BoundProperties"] = [];
            for (var _f = 0, _g = this.boundProperties; _f < _g.length; _f++) {
                var item = _g[_f];
                data["BoundProperties"].push(item.toJSON());
            }
        }
        if (Array.isArray(this.filterDescriptors)) {
            data["FilterDescriptors"] = [];
            for (var _h = 0, _j = this.filterDescriptors; _h < _j.length; _h++) {
                var item = _j[_h];
                data["FilterDescriptors"].push(item.toJSON());
            }
        }
        data["DisplayName"] = this.displayName;
        if (this.properties) {
            data["Properties"] = {};
            for (var key in this.properties) {
                if (this.properties.hasOwnProperty(key))
                    data["Properties"][key] = this.properties[key];
            }
        }
        return data;
    };
    return ActionDescriptor;
}());
exports.ActionDescriptor = ActionDescriptor;
var ControllerActionDescriptor = /** @class */ (function (_super) {
    __extends(ControllerActionDescriptor, _super);
    function ControllerActionDescriptor(data) {
        return _super.call(this, data) || this;
    }
    ControllerActionDescriptor.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
        if (_data) {
            this.controllerName = _data["ControllerName"];
            this.actionName = _data["ActionName"];
            this.methodInfo = _data["MethodInfo"] ? MethodInfo.fromJS(_data["MethodInfo"]) : undefined;
            this.controllerTypeInfo = _data["ControllerTypeInfo"];
            this.displayName = _data["DisplayName"];
        }
    };
    ControllerActionDescriptor.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ControllerActionDescriptor();
        result.init(data);
        return result;
    };
    ControllerActionDescriptor.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["ControllerName"] = this.controllerName;
        data["ActionName"] = this.actionName;
        data["MethodInfo"] = this.methodInfo ? this.methodInfo.toJSON() : undefined;
        data["ControllerTypeInfo"] = this.controllerTypeInfo;
        data["DisplayName"] = this.displayName;
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return ControllerActionDescriptor;
}(ActionDescriptor));
exports.ControllerActionDescriptor = ControllerActionDescriptor;
var AttributeRouteInfo = /** @class */ (function () {
    function AttributeRouteInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    AttributeRouteInfo.prototype.init = function (_data) {
        if (_data) {
            this.template = _data["Template"];
            this.order = _data["Order"];
            this.name = _data["Name"];
            this.suppressLinkGeneration = _data["SuppressLinkGeneration"];
            this.suppressPathMatching = _data["SuppressPathMatching"];
        }
    };
    AttributeRouteInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new AttributeRouteInfo();
        result.init(data);
        return result;
    };
    AttributeRouteInfo.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Template"] = this.template;
        data["Order"] = this.order;
        data["Name"] = this.name;
        data["SuppressLinkGeneration"] = this.suppressLinkGeneration;
        data["SuppressPathMatching"] = this.suppressPathMatching;
        return data;
    };
    return AttributeRouteInfo;
}());
exports.AttributeRouteInfo = AttributeRouteInfo;
var IActionConstraintMetadata = /** @class */ (function () {
    function IActionConstraintMetadata(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    IActionConstraintMetadata.prototype.init = function (_data) {
    };
    IActionConstraintMetadata.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IActionConstraintMetadata' cannot be instantiated.");
    };
    IActionConstraintMetadata.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return IActionConstraintMetadata;
}());
exports.IActionConstraintMetadata = IActionConstraintMetadata;
var ParameterDescriptor = /** @class */ (function () {
    function ParameterDescriptor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.bindingInfo = new BindingInfo();
        }
    }
    ParameterDescriptor.prototype.init = function (_data) {
        if (_data) {
            this.name = _data["Name"];
            this.parameterType = _data["ParameterType"];
            this.bindingInfo = _data["BindingInfo"] ? BindingInfo.fromJS(_data["BindingInfo"]) : new BindingInfo();
        }
    };
    ParameterDescriptor.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ParameterDescriptor();
        result.init(data);
        return result;
    };
    ParameterDescriptor.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Name"] = this.name;
        data["ParameterType"] = this.parameterType;
        data["BindingInfo"] = this.bindingInfo ? this.bindingInfo.toJSON() : undefined;
        return data;
    };
    return ParameterDescriptor;
}());
exports.ParameterDescriptor = ParameterDescriptor;
var BindingInfo = /** @class */ (function () {
    function BindingInfo(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    BindingInfo.prototype.init = function (_data) {
        if (_data) {
            this.bindingSource = _data["BindingSource"] ? BindingSource.fromJS(_data["BindingSource"]) : undefined;
            this.binderModelName = _data["BinderModelName"];
            this.binderType = _data["BinderType"];
            this.propertyFilterProvider = _data["PropertyFilterProvider"] ? IPropertyFilterProvider.fromJS(_data["PropertyFilterProvider"]) : undefined;
            this.requestPredicate = _data["RequestPredicate"] ? FuncOfActionContextAndBoolean.fromJS(_data["RequestPredicate"]) : undefined;
            this.emptyBodyBehavior = _data["EmptyBodyBehavior"];
        }
    };
    BindingInfo.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new BindingInfo();
        result.init(data);
        return result;
    };
    BindingInfo.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["BindingSource"] = this.bindingSource ? this.bindingSource.toJSON() : undefined;
        data["BinderModelName"] = this.binderModelName;
        data["BinderType"] = this.binderType;
        data["PropertyFilterProvider"] = this.propertyFilterProvider ? this.propertyFilterProvider.toJSON() : undefined;
        data["RequestPredicate"] = this.requestPredicate ? this.requestPredicate.toJSON() : undefined;
        data["EmptyBodyBehavior"] = this.emptyBodyBehavior;
        return data;
    };
    return BindingInfo;
}());
exports.BindingInfo = BindingInfo;
var BindingSource = /** @class */ (function () {
    function BindingSource(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    BindingSource.prototype.init = function (_data) {
        if (_data) {
            this.displayName = _data["DisplayName"];
            this.id = _data["Id"];
            this.isGreedy = _data["IsGreedy"];
            this.isFromRequest = _data["IsFromRequest"];
        }
    };
    BindingSource.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new BindingSource();
        result.init(data);
        return result;
    };
    BindingSource.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["DisplayName"] = this.displayName;
        data["Id"] = this.id;
        data["IsGreedy"] = this.isGreedy;
        data["IsFromRequest"] = this.isFromRequest;
        return data;
    };
    return BindingSource;
}());
exports.BindingSource = BindingSource;
var IPropertyFilterProvider = /** @class */ (function () {
    function IPropertyFilterProvider(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.propertyFilter = new FuncOfModelMetadataAndBoolean();
        }
    }
    IPropertyFilterProvider.prototype.init = function (_data) {
        if (_data) {
            this.propertyFilter = _data["PropertyFilter"] ? FuncOfModelMetadataAndBoolean.fromJS(_data["PropertyFilter"]) : new FuncOfModelMetadataAndBoolean();
        }
    };
    IPropertyFilterProvider.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IPropertyFilterProvider' cannot be instantiated.");
    };
    IPropertyFilterProvider.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["PropertyFilter"] = this.propertyFilter ? this.propertyFilter.toJSON() : undefined;
        return data;
    };
    return IPropertyFilterProvider;
}());
exports.IPropertyFilterProvider = IPropertyFilterProvider;
var FuncOfModelMetadataAndBoolean = /** @class */ (function (_super) {
    __extends(FuncOfModelMetadataAndBoolean, _super);
    function FuncOfModelMetadataAndBoolean(data) {
        return _super.call(this, data) || this;
    }
    FuncOfModelMetadataAndBoolean.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
    };
    FuncOfModelMetadataAndBoolean.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new FuncOfModelMetadataAndBoolean();
        result.init(data);
        return result;
    };
    FuncOfModelMetadataAndBoolean.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return FuncOfModelMetadataAndBoolean;
}(MulticastDelegate));
exports.FuncOfModelMetadataAndBoolean = FuncOfModelMetadataAndBoolean;
var FuncOfActionContextAndBoolean = /** @class */ (function (_super) {
    __extends(FuncOfActionContextAndBoolean, _super);
    function FuncOfActionContextAndBoolean(data) {
        return _super.call(this, data) || this;
    }
    FuncOfActionContextAndBoolean.prototype.init = function (_data) {
        _super.prototype.init.call(this, _data);
    };
    FuncOfActionContextAndBoolean.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new FuncOfActionContextAndBoolean();
        result.init(data);
        return result;
    };
    FuncOfActionContextAndBoolean.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        _super.prototype.toJSON.call(this, data);
        return data;
    };
    return FuncOfActionContextAndBoolean;
}(MulticastDelegate));
exports.FuncOfActionContextAndBoolean = FuncOfActionContextAndBoolean;
var EmptyBodyBehavior;
(function (EmptyBodyBehavior) {
    EmptyBodyBehavior[EmptyBodyBehavior["Default"] = 0] = "Default";
    EmptyBodyBehavior[EmptyBodyBehavior["Allow"] = 1] = "Allow";
    EmptyBodyBehavior[EmptyBodyBehavior["Disallow"] = 2] = "Disallow";
})(EmptyBodyBehavior = exports.EmptyBodyBehavior || (exports.EmptyBodyBehavior = {}));
var FilterDescriptor = /** @class */ (function () {
    function FilterDescriptor(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    FilterDescriptor.prototype.init = function (_data) {
        if (_data) {
            this.filter = _data["Filter"] ? IFilterMetadata.fromJS(_data["Filter"]) : undefined;
            this.order = _data["Order"];
            this.scope = _data["Scope"];
        }
    };
    FilterDescriptor.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new FilterDescriptor();
        result.init(data);
        return result;
    };
    FilterDescriptor.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Filter"] = this.filter ? this.filter.toJSON() : undefined;
        data["Order"] = this.order;
        data["Scope"] = this.scope;
        return data;
    };
    return FilterDescriptor;
}());
exports.FilterDescriptor = FilterDescriptor;
var IFilterMetadata = /** @class */ (function () {
    function IFilterMetadata(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    IFilterMetadata.prototype.init = function (_data) {
    };
    IFilterMetadata.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IFilterMetadata' cannot be instantiated.");
    };
    IFilterMetadata.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return IFilterMetadata;
}());
exports.IFilterMetadata = IFilterMetadata;
var IValueProviderFactory = /** @class */ (function () {
    function IValueProviderFactory(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    IValueProviderFactory.prototype.init = function (_data) {
    };
    IValueProviderFactory.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IValueProviderFactory' cannot be instantiated.");
    };
    IValueProviderFactory.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return IValueProviderFactory;
}());
exports.IValueProviderFactory = IValueProviderFactory;
var IModelMetadataProvider = /** @class */ (function () {
    function IModelMetadataProvider(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    IModelMetadataProvider.prototype.init = function (_data) {
    };
    IModelMetadataProvider.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IModelMetadataProvider' cannot be instantiated.");
    };
    IModelMetadataProvider.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return IModelMetadataProvider;
}());
exports.IModelMetadataProvider = IModelMetadataProvider;
var IModelBinderFactory = /** @class */ (function () {
    function IModelBinderFactory(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    IModelBinderFactory.prototype.init = function (_data) {
    };
    IModelBinderFactory.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IModelBinderFactory' cannot be instantiated.");
    };
    IModelBinderFactory.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return IModelBinderFactory;
}());
exports.IModelBinderFactory = IModelBinderFactory;
var IUrlHelper = /** @class */ (function () {
    function IUrlHelper(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.actionContext = new ActionContext();
        }
    }
    IUrlHelper.prototype.init = function (_data) {
        if (_data) {
            this.actionContext = _data["ActionContext"] ? ActionContext.fromJS(_data["ActionContext"]) : new ActionContext();
        }
    };
    IUrlHelper.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IUrlHelper' cannot be instantiated.");
    };
    IUrlHelper.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["ActionContext"] = this.actionContext ? this.actionContext.toJSON() : undefined;
        return data;
    };
    return IUrlHelper;
}());
exports.IUrlHelper = IUrlHelper;
var IObjectModelValidator = /** @class */ (function () {
    function IObjectModelValidator(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    IObjectModelValidator.prototype.init = function (_data) {
    };
    IObjectModelValidator.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IObjectModelValidator' cannot be instantiated.");
    };
    IObjectModelValidator.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return IObjectModelValidator;
}());
exports.IObjectModelValidator = IObjectModelValidator;
var ProblemDetailsFactory = /** @class */ (function () {
    function ProblemDetailsFactory(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ProblemDetailsFactory.prototype.init = function (_data) {
    };
    ProblemDetailsFactory.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'ProblemDetailsFactory' cannot be instantiated.");
    };
    ProblemDetailsFactory.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return ProblemDetailsFactory;
}());
exports.ProblemDetailsFactory = ProblemDetailsFactory;
var ClaimsPrincipal = /** @class */ (function () {
    function ClaimsPrincipal(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.claims = [];
            this.identities = [];
        }
    }
    ClaimsPrincipal.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["Claims"])) {
                this.claims = [];
                for (var _i = 0, _a = _data["Claims"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.claims.push(Claim.fromJS(item));
                }
            }
            if (Array.isArray(_data["Identities"])) {
                this.identities = [];
                for (var _b = 0, _c = _data["Identities"]; _b < _c.length; _b++) {
                    var item = _c[_b];
                    this.identities.push(ClaimsIdentity.fromJS(item));
                }
            }
            this.identity = _data["Identity"] ? IIdentity.fromJS(_data["Identity"]) : undefined;
        }
    };
    ClaimsPrincipal.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ClaimsPrincipal();
        result.init(data);
        return result;
    };
    ClaimsPrincipal.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.claims)) {
            data["Claims"] = [];
            for (var _i = 0, _a = this.claims; _i < _a.length; _i++) {
                var item = _a[_i];
                data["Claims"].push(item.toJSON());
            }
        }
        if (Array.isArray(this.identities)) {
            data["Identities"] = [];
            for (var _b = 0, _c = this.identities; _b < _c.length; _b++) {
                var item = _c[_b];
                data["Identities"].push(item.toJSON());
            }
        }
        data["Identity"] = this.identity ? this.identity.toJSON() : undefined;
        return data;
    };
    return ClaimsPrincipal;
}());
exports.ClaimsPrincipal = ClaimsPrincipal;
var Claim = /** @class */ (function () {
    function Claim(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.properties = {};
        }
    }
    Claim.prototype.init = function (_data) {
        if (_data) {
            this.issuer = _data["Issuer"];
            this.originalIssuer = _data["OriginalIssuer"];
            if (_data["Properties"]) {
                this.properties = {};
                for (var key in _data["Properties"]) {
                    if (_data["Properties"].hasOwnProperty(key))
                        this.properties[key] = _data["Properties"][key];
                }
            }
            this.subject = _data["Subject"] ? ClaimsIdentity.fromJS(_data["Subject"]) : undefined;
            this.type = _data["Type"];
            this.value = _data["Value"];
            this.valueType = _data["ValueType"];
        }
    };
    Claim.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new Claim();
        result.init(data);
        return result;
    };
    Claim.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Issuer"] = this.issuer;
        data["OriginalIssuer"] = this.originalIssuer;
        if (this.properties) {
            data["Properties"] = {};
            for (var key in this.properties) {
                if (this.properties.hasOwnProperty(key))
                    data["Properties"][key] = this.properties[key];
            }
        }
        data["Subject"] = this.subject ? this.subject.toJSON() : undefined;
        data["Type"] = this.type;
        data["Value"] = this.value;
        data["ValueType"] = this.valueType;
        return data;
    };
    return Claim;
}());
exports.Claim = Claim;
var ClaimsIdentity = /** @class */ (function () {
    function ClaimsIdentity(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.claims = [];
        }
    }
    ClaimsIdentity.prototype.init = function (_data) {
        if (_data) {
            this.authenticationType = _data["AuthenticationType"];
            this.isAuthenticated = _data["IsAuthenticated"];
            this.actor = _data["Actor"] ? ClaimsIdentity.fromJS(_data["Actor"]) : undefined;
            this.bootstrapContext = _data["BootstrapContext"];
            if (Array.isArray(_data["Claims"])) {
                this.claims = [];
                for (var _i = 0, _a = _data["Claims"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.claims.push(Claim.fromJS(item));
                }
            }
            this.label = _data["Label"];
            this.name = _data["Name"];
            this.nameClaimType = _data["NameClaimType"];
            this.roleClaimType = _data["RoleClaimType"];
        }
    };
    ClaimsIdentity.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ClaimsIdentity();
        result.init(data);
        return result;
    };
    ClaimsIdentity.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["AuthenticationType"] = this.authenticationType;
        data["IsAuthenticated"] = this.isAuthenticated;
        data["Actor"] = this.actor ? this.actor.toJSON() : undefined;
        data["BootstrapContext"] = this.bootstrapContext;
        if (Array.isArray(this.claims)) {
            data["Claims"] = [];
            for (var _i = 0, _a = this.claims; _i < _a.length; _i++) {
                var item = _a[_i];
                data["Claims"].push(item.toJSON());
            }
        }
        data["Label"] = this.label;
        data["Name"] = this.name;
        data["NameClaimType"] = this.nameClaimType;
        data["RoleClaimType"] = this.roleClaimType;
        return data;
    };
    return ClaimsIdentity;
}());
exports.ClaimsIdentity = ClaimsIdentity;
var IIdentity = /** @class */ (function () {
    function IIdentity(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    IIdentity.prototype.init = function (_data) {
        if (_data) {
            this.name = _data["Name"];
            this.authenticationType = _data["AuthenticationType"];
            this.isAuthenticated = _data["IsAuthenticated"];
        }
    };
    IIdentity.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'IIdentity' cannot be instantiated.");
    };
    IIdentity.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["Name"] = this.name;
        data["AuthenticationType"] = this.authenticationType;
        data["IsAuthenticated"] = this.isAuthenticated;
        return data;
    };
    return IIdentity;
}());
exports.IIdentity = IIdentity;
var Keys = /** @class */ (function () {
    function Keys(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    Keys.prototype.init = function (_data) {
    };
    Keys.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new Keys();
        result.init(data);
        return result;
    };
    Keys.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return Keys;
}());
exports.Keys = Keys;
var Values = /** @class */ (function () {
    function Values(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    Values.prototype.init = function (_data) {
    };
    Values.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new Values();
        result.init(data);
        return result;
    };
    Values.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        return data;
    };
    return Values;
}());
exports.Values = Values;
//# sourceMappingURL=web-client-api.js.map